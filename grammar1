BLOCK -> LINE_CODE
BLOCK -> { CODE }

CODE -> ATRIBUITION CODE
CODE -> EXPRESSION CODE
CODE -> DECLARATION CODE
CODE -> REPETITION CODE
CODE -> CONDITION CODE
CODE -> empty

LINE_CODE -> ATRIBUITION 
LINE_CODE -> EXPRESSION
LINE_CODE -> DECLARATION
LINE_CODE -> REPETITION
LINE_CODE -> CONDITION


ATRIBUITION -> id VAL
VAL -> num
VAL -> id
VAL -> str

DECLARATION -> TYPE id DECLARATION_
DECLARATION_ -> empty 
DECLARATION_ -> = VAL
TYPE -> int 
TYPE -> float
TYPE -> char

ARTM_EXP -> TERM ARTM_EXP_

TERM -> F TERM_
F -> ( ARTM_EXP )
F -> id

ARTM_EXP_ -> + TERM ARTM_EXP_ 
ARTM_EXP_ -> - TERM ARTM_EXP_
ARTM_EXP_ -> empty

TERM_ -> * F TERM_ 
TERM_ -> / F TERM_
TERM_ -> % F TERM_ 
TERM_ -> empty

LOGICAL_EXP -> ARTM_EXP LOGICAL_EXP_ 
LOGICAL_EXP_ -> == ARTM_EXP
LOGICAL_EXP_ -> != ARTM_EXP
LOGICAL_EXP_ -> >= ARTM_EXP
LOGICAL_EXP_ -> <= ARTM_EXP
LOGICAL_EXP_ -> > ARTM_EXP
LOGICAL_EXP_ -> < ARTM_EXP

EXPRESSION -> ARTM_EXP
EXPRESSION -> LOGICAL_EXP

CONDITION -> if ( EXPRESSION ) BLOCK CONDITION_
CONDITION_ -> else BLOCK
CONDITION_ -> empty

REPETITION -> for ( DECLARATION EXPRESSION ATRIBUITION ) BLOCK
REPETITION ->  while ( EXPRESSION ) BLOCK



##############################################
##############################################


CODE -> $
CODE -> ATRIBUITION CODE
CODE -> DECLARATION CODE
CODE -> REPETITION CODE
CODE -> CONDITION CODE

BLOCK -> { CODE }

ATRIBUITION -> id = VAL
VAL -> num
VAL -> EXPRESSION
VAL -> str

DECLARATION -> TYPE id DECLARATION_
DECLARATION_ -> empty 
DECLARATION_ -> = VAL

TYPE -> int 
TYPE -> float
TYPE -> char

ARTM_EXP -> TERM ARTM_EXP_

TERM -> F TERM_
F -> ( ARTM_EXP )
F -> id

ARTM_EXP_ -> + TERM ARTM_EXP_ 
ARTM_EXP_ -> - TERM ARTM_EXP_
ARTM_EXP_ -> ''

TERM_ -> * F TERM_ 
TERM_ -> / F TERM_
TERM_ -> % F TERM_ 
TERM_ -> ''


EXPRESSION -> ARTM_EXP

CONDITION -> if ( EXPRESSION ) BLOCK CONDITION_
CONDITION_ -> else BLOCK
CONDITION_ -> ''

REPETITION -> for ( DECLARATION EXPRESSION ATRIBUITION ) BLOCK
REPETITION ->  while ( EXPRESSION ) BLOCK
