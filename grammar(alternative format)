CODE -> ATRIBUITION CODE
CODE -> EXPRESSION CODE
CODE -> DECLARATION CODE
CODE -> REPETITION CODE
CODE -> CONDITION CODE
CODE -> eof

CODE_ -> ATRIBUITION CODE_
CODE_ -> EXPRESSION CODE_
CODE_ -> DECLARATION CODE_
CODE_ -> REPETITION CODE_
CODE_ -> CONDITION CODE_
CODE_ -> empty

LINE_CODE -> ATRIBUITION 
LINE_CODE -> EXPRESSION
LINE_CODE -> DECLARATION
LINE_CODE -> REPETITION
LINE_CODE -> CONDITION

BLOCK -> { CODE_ }
BLOCK -> LINE_CODE

ATRIBUITION -> SCALAR_ATR 
ATRIBUITION -> VECTOR_ATR 

SCALAR_ATR -> id = VAL
VAL -> num
VAL -> ID
VAL -> STR 

VECTOR_ATR -> id [ VSIZE ] = { ELEM }
VSIZE -> num
VSIZE -> empty
ELEM -> NUM_ELEM 
ELEM -> CHAR_ELEM
NUM_ELEM -> num NUM_ELEM 
NUM_ELEM -> empty
CHAR_ELEM -> char CHAR_ELEM 
CHAR_ELEM -> empty

DECLARATION -> TYPE ATRIBUITION
TYPE -> int 
TYPE -> float
TYPE -> char

EXPRESSION -> ARTM_EXP
EXPRESSION -> LOGICAL_EXP

ARTM_EXP -> TERM ARTM_EXP_ 

TERM -> F TERM_
F -> ( ARTM_EXP )
F -> id

ARTM_EXP_ -> + TERM ARTM_EXP_ 
ARTM_EXP_ -> - TERM ARTM_EXP_
ARTM_EXP_ -> empty

TERM_ -> * F TERM_ 
TERM_ -> / F TERM_
TERM_ -> % F TERM_ 
TERM_ -> empty

LOGICAL_EXP -> TERM LOGICAL_OP TERM

TERM -> VAL 
TERM -> EXPRESSION

LOGICAL_OP -> =
LOGICAL_OP -> !=
LOGICAL_OP -> >
LOGICAL_OP -> <
LOGICAL_OP -> >=
LOGICAL_OP -> <=

CONDITION -> if ( EXPRESSION ) BLOCK CONDITION_
CONDITION_ -> else BLOCK
CONDITION -> empty

REPETITION -> for ( DECLARATION EXPRESSION ATRIBUITION ) BLOCK
REPETITION ->  while ( EXPRESSION ) BLOCK
